{"ast":null,"code":"var _jsxFileName = \"/home/t/DriveToby/xPro/formik/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert(\"Login sucessful\");\n    },\n    validate: values => {\n      let errors = {};\n      //if(!values.email) errors.email = 'Input required';\n      if (!values.email) {\n        errors.email = \"Email is required\";\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = \"Not a valid email\";\n      } else {\n        errors.email = null;\n      }\n      if (!values.password) errors.password = 'Input required';\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The app is ready! You can proceed with the task instructions. TODO: build you form here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pswError\",\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submButton\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","App","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","test","handleSubmit","handleChange","color"],"sources":["/home/t/DriveToby/xPro/formik/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport {useFormik} from 'formik'\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert(\"Login sucessful\");\n    },\n\n    validate: values => {\n      let errors = {};\n      //if(!values.email) errors.email = 'Input required';\n      if (!values.email) {\n        errors.email = \"Email is required\"\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)){\n        errors.email = \"Not a valid email\"\n      } else {\n        errors.email = null\n      }\n\n\n\n      if(!values.password) errors.password = 'Input required';\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n      <p>\n        The app is ready! You can proceed with the task instructions. TODO:\n        build you form here.\n      </p>\n\n      <form onSubmit={formik.handleSubmit}>\n        <div>Email</div>\n        <input id=\"email\" type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div id=\"emailError\" style={{color: 'red'}}>{formik.errors.email}</div> : null}\n\n        <div>Password</div>\n        <input id=\"password\" type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div id=\"pswError\" style={{color: 'red'}}>{formik.errors.password}</div> : null}\n\n        <button id=\"submButton\" type=\"submit\">Submit</button>\n\n      </form>  \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAAQC,SAAS,QAAO,QAAQ;AAAA;AAEhC,SAASC,GAAG,GAAG;EAAA;EACb;;EAEA,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAAC,iBAAiB,CAAC;IAC1B,CAAC;IAEDC,QAAQ,EAAEF,MAAM,IAAI;MAClB,IAAIG,MAAM,GAAG,CAAC,CAAC;MACf;MACA,IAAI,CAACH,MAAM,CAACH,KAAK,EAAE;QACjBM,MAAM,CAACN,KAAK,GAAG,mBAAmB;MACpC,CAAC,MAAM,IAAI,CAAC,2CAA2C,CAACO,IAAI,CAACJ,MAAM,CAACH,KAAK,CAAC,EAAC;QACzEM,MAAM,CAACN,KAAK,GAAG,mBAAmB;MACpC,CAAC,MAAM;QACLM,MAAM,CAACN,KAAK,GAAG,IAAI;MACrB;MAIA,IAAG,CAACG,MAAM,CAACF,QAAQ,EAAEK,MAAM,CAACL,QAAQ,GAAG,gBAAgB;MACvD,OAAOK,MAAM;IACf;EACF,CAAC,CAAC;EAEF,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGI,eAEJ;MAAM,QAAQ,EAAER,MAAM,CAACU,YAAa;MAAA,wBAClC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB,eAChB;QAAO,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEV,MAAM,CAACW,YAAa;QAAC,KAAK,EAAEX,MAAM,CAACK,MAAM,CAACH;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,EACzFF,MAAM,CAACQ,MAAM,CAACN,KAAK,gBAAG;QAAK,EAAE,EAAC,YAAY;QAAC,KAAK,EAAE;UAACU,KAAK,EAAE;QAAK,CAAE;QAAA,UAAEZ,MAAM,CAACQ,MAAM,CAACN;MAAK;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAErG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAO,EAAE,EAAC,UAAU;QAAC,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAEF,MAAM,CAACW,YAAa;QAAC,KAAK,EAAEX,MAAM,CAACK,MAAM,CAACF;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,EAC/FH,MAAM,CAACQ,MAAM,CAACL,QAAQ,gBAAG;QAAK,EAAE,EAAC,UAAU;QAAC,KAAK,EAAE;UAACS,KAAK,EAAE;QAAK,CAAE;QAAA,UAAEZ,MAAM,CAACQ,MAAM,CAACL;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI,eAEzG;QAAQ,EAAE,EAAC,YAAY;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAnDQJ,GAAG;EAAA,QAGKD,SAAS;AAAA;AAAA,KAHjBC,GAAG;AAqDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}